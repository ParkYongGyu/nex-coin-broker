/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'http://repo.spring.io/libs-snapshot' }
	maven { url 'http://repo.spring.io/libs-milestone' }
    
}

// tag::jar[]
jar {
    baseName = 'nex-coin-broker'
    version =  '0.1.0'
}
// end::jar[]

// tag::dependencies[]
sourceCompatibility = 1.8
targetCompatibility = 1.8



mainClassName = 'net.nexg.exchange.spring.integration.Main'

dependencies {

	compile "org.springframework.integration:spring-integration-core:5.0.0.RELEASE"
	compile "org.springframework.integration:spring-integration-ip:5.0.0.RELEASE"

	compile "commons-lang:commons-lang:2.6"
	compile "org.apache.logging.log4j:log4j-core:2.7"
    compile "org.slf4j:slf4j-api:1.7.12"

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
}





task runBroker(type: JavaExec) {
	main 'net.nexg.exchange.spring.integration.Main'
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	// 	useful for debugging the GradleWorkerMain
	//		jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000"

}


task runAuthServer(type: JavaExec) {
	main 'net.nexg.exchange.servers.authserver.Main'
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	// 	useful for debugging the GradleWorkerMain
	//		jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000"

}



task runMemberServer(type: JavaExec) {
	main 'net.nexg.exchange.servers.memberinfo.Main'
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	// 	useful for debugging the GradleWorkerMain
	//		jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000"

}



task runOrderProcessServer(type: JavaExec) {
	main 'net.nexg.exchange.servers.orderprocess.Main'
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	// 	useful for debugging the GradleWorkerMain
	//		jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000"

}




